[{"C:\\Git\\react_componentes_estilo_tema\\my-app\\src\\index.js":"1","C:\\Git\\react_componentes_estilo_tema\\my-app\\src\\App.js":"2","C:\\Git\\react_componentes_estilo_tema\\my-app\\src\\reportWebVitals.js":"3","C:\\Git\\react_componentes_estilo_tema\\my-app\\src\\Temas.js":"4","C:\\Git\\react_componentes_estilo_tema\\my-app\\src\\GlobalStyle.js":"5","C:\\Git\\react_componentes_estilo_tema\\my-app\\src\\Toggle.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":1353,"mtime":1607394567375,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":307,"mtime":1607388442507,"results":"11","hashOfConfig":"8"},{"size":613,"mtime":1607393199784,"results":"12","hashOfConfig":"8"},{"size":580,"mtime":1607394052288,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1bt0p3m",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"C:\\Git\\react_componentes_estilo_tema\\my-app\\src\\index.js",[],["29","30"],"C:\\Git\\react_componentes_estilo_tema\\my-app\\src\\App.js",["31"],"import React, { Component } from \"react\";\nimport  { GlobalStyle } from \"./GlobalStyle\"; \nimport { ThemeProvider } from \"styled-components\";\nimport { darkTheme, LigthTheme } from './Temas';\nimport Toggle from './Toggle';\nimport './App.css';\n\nclass App extends Component  {\n  constructor(props) {\n    super(props);\n    this.state = { \n      inputText: \"\",\n      theme: \"Branco\",\n    };\n  }\n\n  searchBoxHandler(data) {\n    this.setState({\n      inputText: data\n    });\n  }\n\n  toggleTheme = () => {\n    if (this.state.theme == 'Branco') {\n      this.setState({\n        inputText: this.state.imputText,\n        theme: 'Escuro',\n      });\n    } else {\n      this.setState({\n        inputText: this.state.imputText,\n        theme: 'Branco',\n      });  \n    }\n  }\n\n  render() {\n    return (\n      <ThemeProvider theme = {this.state.theme === 'Escuro' ? darkTheme : LigthTheme}>\n        <GlobalStyle/>\n        <div className=\"App\">\n          <form>\n             <h1 className=\"texto\">Sign up to my newsletter</h1>\n             <p></p>\n             <input type=\"text\" placeholder=\"my@email.com\"></input>\n             <button  className=\"button\">Sign up</button>\n             <p></p>\n          </form>\n\n          <Toggle themeLabel = {this.state.theme} toggleTheme={this.toggleTheme}/>\n        </div>\n      </ThemeProvider>    \n    );\n  }  \n}\n\nexport default App;\n","C:\\Git\\react_componentes_estilo_tema\\my-app\\src\\reportWebVitals.js",[],"C:\\Git\\react_componentes_estilo_tema\\my-app\\src\\Temas.js",[],"C:\\Git\\react_componentes_estilo_tema\\my-app\\src\\GlobalStyle.js",[],"C:\\Git\\react_componentes_estilo_tema\\my-app\\src\\Toggle.js",["32"],"import React from \"react\";\r\nimport styled, {ThemeProvider} from \"styled-components\";\r\n\r\nconst DarkModeButton = styled.button`\r\n  background: ${({theme}) => theme.backgroundcolor};\r\n  color: ${({theme}) => theme.color};\r\n  border-radios: 30px;\r\n  cursor: pointer;\r\n  font-size: 0.8rem;\r\n  padding: 0.6rem;\r\n`;\r\n\r\nconst Toggle = ({themeLabel, toggleTheme}) => {\r\n    let label = ['Mudar para ', themeLabel === 'Branco' ? 'Escuro' : 'Branco'].join('');\r\n\treturn (\r\n\t\t<DarkModeButton onClick={toggleTheme}>\r\n            {label}\r\n\t\t</DarkModeButton>\r\n\t);\t\r\n}\r\n\r\nexport default Toggle; ",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":24,"column":26,"nodeType":"39","messageId":"40","endLine":24,"endColumn":28},{"ruleId":"41","severity":1,"message":"42","line":2,"column":17,"nodeType":"43","messageId":"44","endLine":2,"endColumn":30},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'ThemeProvider' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]